riot.mixin("CONSTANTS",{strings:{appname:"My Appname"}}),riot.mixin("FILTERS",{truncate:function(a,b){return a.length>b?a.slice(0,b)+" ...":a}}),riot.tag2("ajax",'<div class="row"><div class="col-sm-12"><div class="page-header"><h1>Ajax get request</h1><small>http://jsonplaceholder.typicode.com/posts</small></div></div></div><div class="row"><div class="col-sm-12 text-center" if="{progress}"><i class="fa fa-lg fa-cog fa-spin"></i> Loading posts... </div></div><div class="row" if="{error}"><div class="col-sm-12 text-center"><div class="alert alert-danger"> An error occured, please try again </div></div></div><div class="row" if="{posts}" each="{posts}"><div class="col-sm-12"><h3>{title}</h3><p>{body}</p></div></div>',"","",function(a){var b=this,c=$.ajax({url:"http://jsonplaceholder.typicode.com/posts",method:"GET",dataType:"json",beforeSend:function(){b.progress=!0}});c.done(function(a){a.length&&(b.posts=a.splice(0,10))}),c.fail(function(a,c){b.error=!0}),c.always(function(a){b.progress=!1,b.update()})}),riot.tag2("app",'<navbar page="{page}"></navbar><div class="container"><div class="row"><div class="col-md-12"><div id="view"></div></div></div></div>',"","",function(a){var b=this;riot.route.start(stop),riot.route.start(!0),riot.route(function(a,c,d){var e=""===a?"home":a;b.page=e,b.update(),"home"===e&&riot.mount("#view","home"),"posts"===e&&(c?riot.mount("#view","form-post"):riot.mount("#view","posts")),"post"===e&&(d?riot.mount("#view","form-post",{id:c}):riot.mount("#view","post",{id:c})),"ajax"===e&&riot.mount("#view","ajax")})}),riot.tag2("form-post",'<div class="row"><div class="col-sm-12"><div class="page-header"><h1><span if="{id}">{post.title}</span><span if="{!id}">Create a new post</span></h1></div></div></div><div class="row"><div class="col-md-12"><form class="form-horizontal" onsubmit="{newPost}"><div class="form-group"><label for="title" class="col-md-1 control-label">Title *</label><div class="col-md-10"><input type="text" class="form-control" id="title" name="title" value="{post.title}" placeholder="Choose a title for your post"></div></div><div class="form-group"><label for="body" class="col-md-1 control-label">Body *</label><div class="col-md-10"><textarea class="form-control" id="body" name="body" value="{post.body}" cols="30" rows="10"></textarea></div></div><div class="form-group"><div class="col-md-offset-1 col-md-2"><button type="submit" class="btn btn-primary">Save</button><button if="{id}" class="btn btn-danger" onclick="{delete}">Delete</button></div></div></form></div></div><div class="row" if="{error}"><div class="col-md-offset-1 col-md-10"><div class="alert alert-danger">Title and body are required</div></div></div>',"","",function(a){var b=this;b.error=!1,b.id=this.opts.__proto__.id,b.id&&db.get(b.id).then(function(a){b.post=a,b.update()})["catch"](function(a){console.log(a)}),b.newPost=function(){var a=b.title.value,c=b.body.value;if(""===a||""===c)return void(b.error=!0);var d={_id:(new Date).valueOf().toString(),title:a,body:c};b.id?db.get(b.id).then(function(a){return db.put({_id:b.id,_rev:a._rev,title:b.title.value,body:b.body.value})}).then(function(a){riot.route("post/"+b.id)})["catch"](function(a){console.log(a)}):db.put(d).then(function(a){riot.route("post/"+d._id)})["catch"](function(a){console.log(a)})},b["delete"]=function(){return confirm("Are you sure ?")&&db.get(b.id).then(function(a){return db.remove(a)}).then(function(a){riot.route("posts")})["catch"](function(a){console.log(a)}),!1}}),riot.tag2("home",'<div class="jumbotron"><h1>Riot app example</h1><p>Just playing around</p><p><a class="btn btn-primary btn-lg" href="#posts" role="button">View posts</a></p></div>',"","",function(a){}),riot.tag2("navbar",'<nav class="navbar navbar-default navbar-static-top"><div class="container"><div class="navbar-header"><button type="button" class="navbar-toggle collapsed" data-toggle="collapse" data-target="#navbar" aria-expanded="false" aria-controls="navbar"><span class="sr-only">Toggle navigation</span><span class="icon-bar"></span><span class="icon-bar"></span><span class="icon-bar"></span></button><a class="navbar-brand" href="#">{appname}</a></div><div id="navbar" class="navbar-collapse collapse"><ul class="nav navbar-nav"><li class="{active: opts.page===\'home\'}"><a href="#">Home</a></li><li class="{active: opts.page.indexOf(\'post\')!==-1}"><a href="#posts">Posts</a></li></ul><ul class="nav navbar-nav navbar-right"><li class="{active: opts.page===\'ajax\'}"><a href="#ajax">Ajax request</a></li></ul></div></div></nav>',"","",function(a){this.mixin("CONSTANTS"),this.appname=this.strings.appname}),riot.tag2("post",'<div class="row"><div class="col-sm-12"><div class="page-header"><h1>{post.title}</h1></div></div></div><div class="row post-body"><div class="col-sm-12"> {post.body} </div></div><div class="row"><div class="col-sm-12"><a href="" class="btn btn-primary" onclick="{edit}">Edit post</a></div></div>','post .post-body,[riot-tag="post"] .post-body,[data-is="post"] .post-body{ margin-bottom: 40px; }',"",function(a){var b=this;b.id=this.opts.__proto__.id,db.get(b.id).then(function(a){b.post=a,b.update()})["catch"](function(a){console.log(a)}),b.edit=function(){riot.route("post/"+b.id+"/edit")}}),riot.tag2("posts",'<div class="row"><div class="col-sm-12"><div class="page-header"><h1>Posts <ul class="list-unstyled list-inline pull-right"><li><a if="{posts.length > 0}" href="" class="btn btn-danger pull-right" onclick="{delete}">Delete all posts</a></li><li><a if="{posts.length > 0}" href="#posts/new" class="btn btn-primary pull-right">New post</a></li></ul></h1></div></div></div><div class="row" if="{posts.length === 0}"><div class="col-sm-12"> No posts found. <a href="#posts/new">create one?</a></div></div><div class="row" each="{posts}" if="{posts.length > 0}"><div class="col-sm-12"><h3><a href="#post/{_id}">{title}</a></h3><p>{truncate(body,250)}</p></div></div>',"","",function(a){this.mixin("FILTERS");var b=this;b.posts=[],db.allDocs({include_docs:!0,attachments:!0}).then(function(a){b.posts=a.rows.map(function(a){return a.doc}),b.update()})["catch"](function(a){console.log(a)}),b["delete"]=function(){return confirm("Are you sure ?")&&db.allDocs().then(function(a){return Promise.all(a.rows.map(function(a){return db.remove(a.id,a.value.rev)}))}).then(function(){b.posts=[],b.update()})["catch"](function(a){console.log(error)}),!1}});